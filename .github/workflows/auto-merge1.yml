name: Auto Merge

on:
  pull_request_target:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  pull_request_review:
    types:
      - submitted
  check_suite:
    types:
      - completed
  status: {}

jobs:
  automerge:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      actions: write  # Ensure proper permissions

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Ensure PR is mergeable and approved
        id: check_pr
        env:
          GH_TOKEN: ${{ github.token }}  # Default token provided by GitHub Actions
        run: |
          pr_number=${{ github.event.pull_request.number }}
          
          # Get PR details
          pr_details=$(gh pr view $pr_number --json mergeable --jq .)
          echo "PR Details: $pr_details"
          mergeable=$(echo "$pr_details" | jq -r .mergeable)
          echo "Mergeable state: $mergeable"
          
          # Check if mergeable
          if [ "$mergeable" != "MERGEABLE" ]; then
            echo "Pull request is not mergeable."
            exit 1
          fi

          # Check review approvals
          approvals=$(gh pr reviews $pr_number --json state --jq '.[] | select(.state == "APPROVED")' | wc -l)
          echo "Number of approvals: $approvals"

          if [ "$approvals" -eq 0 ]; then
            echo "Pull request has no approvals. Exiting."
            exit 1
          fi

      - name: Automerge Script
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            
            if (pr.mergeable_state === "dirty") {
              console.log("Pull request has merge conflicts.");
              return;
            }
            if (pr.mergeable_state === "clean") {
              console.log("PR is clean and ready for merging.");
            } else {
              console.log("Mergeable state:", pr.mergeable_state);
            }

            if (pr.mergeable) {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                merge_method: "squash",
                commit_title: "Auto-merged by GitHub Actions"
              });
            } else {
              console.log("Pull request is not mergeable.");
            }
