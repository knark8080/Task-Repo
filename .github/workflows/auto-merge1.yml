name: Auto Merge

on:
  workflow_run:
    workflows:
      - CI Python
    types:
      - completed  # Trigger when a review is submitted (approved or changes requested)

jobs:
  automerge:
    runs-on: ubuntu-latest
    permissions:
      contents: read       # Read repository content
      pull-requests: write # Write access to PRs (to merge them)
      actions: write       # Allow executing actions

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure Required Approvals
        id: approvals
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const approvedReviews = reviews.filter(review => review.state === "APPROVED");
            const requiredApprovals = 1; // Adjust as per your repo's requirements

            if (approvedReviews.length < requiredApprovals) {
              core.setFailed(`PR requires at least ${requiredApprovals} approval(s).`);
            }

      - name: Ensure All Checks Have Passed
        id: checks
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            const { data: statuses } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha
            });

            const failedChecks = statuses.check_runs.filter(check => check.conclusion !== "success");

            if (failedChecks.length > 0) {
              core.setFailed(`Not all checks have passed. Failed checks: ${failedChecks.map(c => c.name).join(", ")}`);
            }

      - name: Ensure PR is Mergeable
        id: mergeable
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            if (!pr.mergeable) {
              core.setFailed("Pull request is not mergeable.");
            }

      - name: Automerge Script
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            if (pr.mergeable_state === "clean") {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                merge_method: "rebase",
                commit_title: "Auto-merged by GitHub Actions"
              });
            } else {
              console.log("Pull request is not clean and cannot be merged.");
            }
